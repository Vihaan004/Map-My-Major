{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VIHAAN\\\\OneDrive\\\\Projects\\\\Map My Major\\\\vercel\\\\frontend\\\\src\\\\components\\\\Maps\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './MapPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapPage = () => {\n  _s();\n  const {\n    mapName\n  } = useParams();\n  const [map, setMap] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMap = async () => {\n      // For now, we'll just simulate the fetching process\n      setLoading(false);\n      setMap({\n        name: mapName\n      });\n    };\n    fetchMap();\n  }, [mapName]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  if (!map) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: map.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"ljIAFLmD7cFfdtm+yOPkxZtUnjE=\", false, function () {\n  return [useParams];\n});\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","MapPage","_s","mapName","map","setMap","loading","setLoading","fetchMap","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VIHAAN/OneDrive/Projects/Map My Major/vercel/frontend/src/components/Maps/MapPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './MapPage.css';\r\n\r\nconst MapPage = () => {\r\n  const { mapName } = useParams();\r\n  const [map, setMap] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMap = async () => {\r\n      // For now, we'll just simulate the fetching process\r\n      setLoading(false);\r\n      setMap({ name: mapName });\r\n    };\r\n\r\n    fetchMap();\r\n  }, [mapName]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!map) {\r\n    return <div>Map not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{map.name}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B;MACAD,UAAU,CAAC,KAAK,CAAC;MACjBF,MAAM,CAAC;QAAEI,IAAI,EAAEN;MAAQ,CAAC,CAAC;IAC3B,CAAC;IAEDK,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,IAAIG,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACV,GAAG,EAAE;IACR,oBAAOJ,OAAA;MAAAU,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,oBACEd,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAAU,QAAA,EAAKN,GAAG,CAACK;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5BID,OAAO;EAAA,QACSH,SAAS;AAAA;AAAAiB,EAAA,GADzBd,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}